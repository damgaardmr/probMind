# ###################### Settings for __Main__.py ######################
map_id_set: map_id.txt  #
reachGoalMode: True  # generate random goals and search for them
goal_zone_radius: 0.5
goal_zone_est_error_3_sigma: 0.1  # used to determine the covariance of the gaussian noise added to the estimated mean of the goal zone
Map_order: True
t_max: 200
T_delta: 3
imageScaling: 2  # should the saved/shown plots be scaled?
resetRandomPose: 1 # flag of whether randomly set robot init pose ar each reset | if 0, robot reset to startPose at each reset

# robot setting
robotRadius: 0.2 # robot radius in meter
startPose: # robot starting pose [y;x;theta] in meter in world coord with center as origin | theta: angle to the x-axis - only used if "resetRandomPose: 0"
  x: 12
  y: 5
  theta: 0


# ###################### Settings for robotexploration.py ######################
svi_epochs: 30  # number of epocs used for svi each timestep
N_posterior_samples: 30  # number of samples used to calculate sample mean of posterior distribution
return_Mode: "mean"  # "mean" or "random"

K: 2  # K: number of options/trajectories to consider
M: 2  # M: number of samples from each independent perception in calculation of the information gain
N: 2  # N: number of LTM samples used in calculation of the information gain
G: 1  # G: number of samples from each independent constraint
L: 5  # L: number of past states to consider in progress

desirability_scale_factor: 0.1
progress_scale_factor: 0.01
info_gain_scale_factor: 2.0

consider_impasse: True  # True enables check of impasse and Goal search

initial_lr: 0.05
gamma: 0.2  # final learning rate will be gamma * initial_lr

initial_3_sigma: 0.2  # used to define covariance of the distribution over initial position - 99.7% of samples within a circle of 2 cm
movement_3_sigma: 0.2  # 99.7% of future movements can be expected to be within a circle of 20 cm
a_support: [2, 2]  # support of the action distributions

# lidar params
lidar:
  range: 2 # laser range in meter
  fov: 360 # laser field of view in degree
  resolution: 1 # laser rotation resolution in degree
  sigma_hit: 0.10
  lambda_short: None  # not implemented! => should always be None
  P_hit: 0.99999
  P_rand: 0.00001
  P_max: 0.0
  P_short: 0.0  # not implemented yet! => should always be zero

# constraint params
distance_buffer: 0.05
P_z_C_scale: 19.75
constraint_subsampling: 8
information_gain_subsampling: 1

# ###################### Environment Settings for the pseudoslam simulator ######################
json_dir: ../../HouseExpo/json/
meter2pixel: 25 # X pixel =1 meter
mode: 0  # 0 for exploration mode, 1 for navigation mode

obstacle:
  number: 0 # number of obstacle added to the world
  size: # size of obstacle added in meter, radius/half length
    min: 0.2
    max: 0.6

# slam setting
slamError:
  linear: 0 # slam linear registration error in pixel
  angular: 0 # slam rotational registration error in degree